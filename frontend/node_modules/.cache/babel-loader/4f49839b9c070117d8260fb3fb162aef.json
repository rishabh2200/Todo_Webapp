{"ast":null,"code":"import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { SpanStatus } from './spanstatus';\nimport { getActiveTransaction } from './utils';\n/**\n * Configures global error listeners\n */\n\nexport function registerErrorInstrumentation() {\n  addInstrumentationHandler({\n    callback: errorCallback,\n    type: 'error'\n  });\n  addInstrumentationHandler({\n    callback: errorCallback,\n    type: 'unhandledrejection'\n  });\n}\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\n\nfunction errorCallback() {\n  var activeTransaction = getActiveTransaction();\n\n  if (activeTransaction) {\n    logger.log(\"[Tracing] Transaction: \" + SpanStatus.InternalError + \" -> Global error occured\");\n    activeTransaction.setStatus(SpanStatus.InternalError);\n  }\n}","map":null,"metadata":{},"sourceType":"module"}